<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>复盘UIST 2024 &amp; 总结HCI一年的旅程</title>
    <link href="/2024/04/09/HCI-2024-04-09/"/>
    <url>/2024/04/09/HCI-2024-04-09/</url>
    
    <content type="html"><![CDATA[<p>北京时间4月6日凌晨00:20，我登上PCS再次查看自己的提交，abstract, paper, alter_figure, video整齐地排列在列表中，这也意味着半年的UIST项目到达了一个milestone的阶段。我也可以声称一下自己是“有一篇A会一作再投”的HCIer了233。但是提交之后，自己倒也没有很多的满足和高兴，而更多是“结束了”的喘息和“或许能做的更好”的遗憾。这段时间过后，自己也会将重心转移到考研上，所以我觉得也有必要在这里复盘一下这段工作的经历，并总结这一年HCI的学习。</p><p>说到这篇paper的idea，我觉得很难说是某个时候突然想出来的想法，在最开始自己体验AI角色扮演的APP时（glow），就体会到如果让用户单独发送信息，这样长期交互下用户必然导致疲惫和无聊，因此，在那时“让AI主动对话”就进入了我的视线；之后，自己遇到了一些挫折和失败，周围好友和亲人的主动关心也让我感到感动，所以我就在思考，<strong>当LLM向人们主动关心时，会带来怎么样的效果？</strong>于是，我就做了一个简单的PPT，希望做一个能<strong>主动关心（proactive support）的Chatbot</strong>。我和老师还有hz，yh讨论了一下，最后大家觉得这个是个有意义的话题，于是我们借助大创申请了实验的经费，开始做了起来。</p><p>2023年11月-2024年1月，我们开始了早期的工作，主要是去做idea iteration。具体的工作包括文献检索、用户访谈以及对话场景的讨论，当然，大创的开题答辩也是我们重点去做的一个工作，毕竟这也关系到我们的实验的经费。从这段时间来看，我们工作主要开展方式为：</p><ul><li><p>文献检索：主要检索了CSCW，CHI和UIST和Chatbot相关的论文（2021~2023），除了Chatbot外，这段时候Text messaging system也是我们重点关注的内容。（因为和proactive chatbot的交互机制类似，用户都可以接收到信息）</p></li><li><p>用户访谈：主要是对贴吧，B站一些使用角色扮演app的活跃用户进行了访谈，找了5个人，后面也找了几位心理学社会学的同学聊了一下。前者访谈主要是了解目前产品是否有“主动对话”的机制，如果有的话是否存在哪些问题，另一点也是了解他们对“主动对话”的期待；而对于心理学社会学的同学，我们主要是希望去寻找一些“论证主动对话会给用户带来更好体验”的学理依据，有的同学提到了“社会交换”和“意外奖励”理论，也有同学论述了一些场景，让我觉得可以限定对话的一些范围。</p></li><li><p>对话场景的讨论：主要是基于检索到的文献去做了一些对话场景的分类和讨论，然后大家确定了一些对话场景，并做到了大创开题答辩的PPT上。</p></li><li><p>大创答辩：主要是将上述成果写到了大创PPT中，然后去珠海进行了一次申报（3分钟答辩，时间很紧），我们大创答辩做的效果并不是很好，对比了一下其他项目，我发现其他项目重点会说<strong>项目的影响力</strong>和<strong>项目的意义</strong>，例如“弥补国内空白”，“xx产业急需”之类的内容，而我们主要的内容则是介绍了这个Chatbot的工作机制，举了一些对话场景的例子和学理支撑的依据，最后讲了下可能产出就没有了。这个可能也是没有做好的点。</p></li></ul><p>2024年1月-2024年2月，这时我们主要是进入Chatbot的实现阶段，在这个阶段我们一方面和老师还有王博讨论了我们Chatbot的应用场景，最后确定采用”Peer support”+”Stress management”的场景。具体来说，我们希望Chatbot能够扮演用户的一个同伴，然后对用户紧张的事情提供主动的关怀，并且能够分享自己的一些日常生活，以缓解用户压力，提高用户交互兴趣。然后，我们接下来开始具体的实现，在实现过程中，主要参考了以下项目：</p><ul><li><a href="https://github.com/joonspk-research/generative_agents">https://github.com/joonspk-research/generative_agents</a>: 斯坦福AI小镇，这篇paper从立项到结束都看了许多遍，然后这里主要是学习其中prompt的写法（虽然最后结果来看感觉差别还挺大的hhh）</li><li><a href="https://flowgpt.com/">https://flowgpt.com/</a>: 这个平台我们也参考了比较多角色扮演prompt的写法和格式，但因为内容比较零散不太好整合，所以在这里列出来</li><li><a href="https://github.com/Syan-Lin/CyberWaifu">https://github.com/Syan-Lin/CyberWaifu</a>: 这个项目学习了它的记忆系统，这也是目前agent比较通用的记忆系统。</li><li><a href="https://docs.go-cqhttp.org/">https://docs.go-cqhttp.org/</a>: 这个是qq机器人的平台，当时把机器人迁移到了qq上（个人感觉有利有弊，如果自己写前端，写个app的话可能用户体验会更好，因为Chatbot无法识别图片，而且用户在qq聊天会连续发送信息，但好处在于qq很容易交互，也很容易联系用户）</li><li><a href="https://arxiv.org/abs/2106.01144">https://arxiv.org/abs/2106.01144</a>: THU黄组的工作，我们主要参考了其中的策略。黄组和他们的公司（聆心智能）也是国内做LLM role-playing的领先者了，他们后面还推出了一个专门提供心理支持的LLM，可惜当时已经开始user study，不然可能能作为baseline model。</li></ul><p>最后，我们按照这上面的资料加上自己的一些尝试和调整做出了Chatbot系统，并且和几位用户还有合作者尝试后感觉还可以，于是我们就开始了user study。</p><p>2024年3月，我们征集了24个用户进行了为期14天的user study。先说总结，个人感觉user study这一块我们没有做好，主要在于<strong>前期系统设计和统计方法</strong>没有做好，为了弥补这些问题，我做了一个<strong>user study清单（详见末尾）</strong>，用于记录未来user study需要准备和注意的内容。其中，前期系统设计并不是说模块设置的有问题，而是前期在设计的时候，忽略了user study的一些要求。具体来说，user study在加入新用户时需要更新用户名单，然后重启系统。一些设置和变量是储存在文件中的，重启后可以重新载入，但是，有一些变量不是储存在文件中，而是作为临时变量储存在程序中的，所以终止程序后，他们重新被初始化，这就导致了用户体验上出现了些问题（例如Chatbot暂停发送主动对话的时间），虽然在user study第二天后修复了这个问题，整体来看没有特别大的影响，但是在之后设计系统的时候还是需要注意user study的一些考量。</p><p>而对于统计方法，我主要在前期采用的是ANOVA统计方法和独立检验t分布，这是参考两篇user study类似的HHCI paper所选择的方法。然而，在后期统计的时候，我发现一方面ANOVA和独立检验t分布需要满足很多条件（例如ANOVA要求数据正态性），而我们的一些数据<strong>不能满足这个条件</strong>，另一点则是我在后期统计的时候，发现我对于数据的<strong>独立性</strong>理解有误，我将每个参与者每天的打分作为一个独立的样本，但实际上应该是<strong>每个参与者7天&#x2F;14天的平均打分</strong>作为一个独立的样本，因为不同天数相同参与者的得分很难说明是独立的（毕竟一些expectation，experience是很难改变的），这导致了前期一些统计结果在后期直接崩掉了。</p><p>关于统计方法，有一个很好的网站: <a href="https://yatani.jp/teaching/doku.php?id=hcistats:start">https://yatani.jp/teaching/doku.php?id=hcistats:start</a></p><p>我强烈推荐所有做user study的朋友在开始前先把网站的内容浏览一遍，确定<strong>独立样本</strong>、<strong>是否正态</strong>，<strong>是否成对</strong>等数据性质，然后再确定统计方法。统计工具的话，我使用的是spss和python。</p><p>除了统计方法，访谈和交互内容一些文本的定性内容也是我们result的重要组成部分</p><p>在user study中，我觉得心态上要做到四点：一是要提前布局，做好准备，user study不同于AI的实验可以容易复现or重做，14天过一天就是一天，也不能暂停或终止。<strong>所以在user study前，应该预计好每个用户每个时间节点要做的事情</strong>（例如提醒填写每日问卷，做好访谈设计，及时填写PSS-10量表等），同时要确定<strong>我要用什么统计方法，要统计什么数据，要给用户准备什么资料，要用哪些baseline model等</strong>；二是要对自己的系统有信心，在开始user study前自己比较担心用户会有“你做的系统没啥用”的这种观点，但是后面访谈中也<strong>有比较多用户对自己的项目有比较积极的评价</strong>，一方面这些内容充实了user study的定性结果，另一方面收到来自用户的积极评价也是让自己自信心好了些；三是要做好数据的保存和格式重建，user study的数据比较杂也比较多（尤其是后面时间一长，我们24个人，一天就有24份问卷，每张问卷7道题，因此一天的问卷数据量就有100+），到后面很大一部分时间都是在做数据收集的dirty work。而且spss统计分析的一些格式要求比较奇特，所以后面也需要将自己的数据重新整理。对于数据整理，我的建议是<strong>最好放到一个excel文件，采用多个sheet保存不同格式的子表，同时各个sheet规范命名</strong>，如果有多人合作，建议采用腾讯文档去进行分工（不过我觉得最好的模式其实是<strong>一个人专门负责整理数据和进行数据分析</strong>），并且对于数据的格式转换，可以让ChatGPT写一些脚本代码帮忙处理。四是要理性看待结果，我们的research是explore而不是confirm，因此一些出现一些“意料之外”（尤其是没有预计结果好）的结果也很正常，但<strong>可以report这些没有那么“好”的结果</strong>，可以<strong>discuss为什么结果会是这样</strong>。同时，用户对于产品的expectation往往是不一致的，因此提出的一些想法也未必能实现，但同样可以放在future work中论述。</p><h3 id="附录-User-study清单"><a href="#附录-User-study清单" class="headerlink" title="附录: User study清单"></a>附录: User study清单</h3><p>1.RQ:我要在User study研究什么？（系统层面：我要探究哪些模块&#x2F;创新点的作用？Contribution层面：这篇paper的congtributions是什么？）<br>2.Participants: 用户人数是多少？用户要参与多少天？如何筛选用户？用户从哪里找？用户报酬要给多少？用户要分成哪些组？<br>3.Baseline model: 应该选取哪些系统作为Baseline model？Baseline model表现会不会过于强势？<br>4.Measurement &amp; Data analysis: 我要收集统计哪些数据？（包括定量和定性）这些数据对应RQ的哪一部分？这些数据的独立样本是什么？这些数据是否是成对的？如果满足&#x2F;不满足正态性应该采用什么分析方法？这些分析方法在SPSS中要求什么样的格式？<br>5.Task and procedure: 整个user study的流程是什么？（画一个流程图）用户需要在开始前做什么？开始后需要做什么？如果用户有问题应该怎么做？我需要准备什么资料？（介绍，问卷，量表，访谈题目等）<br>6.在user study开始前，我的系统是否能够满足user study的需求？是否需要做一些调整？</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从Gridea到Halo再到Hexo:记录三次博客的配置之旅</title>
    <link href="/2024/04/09/Post_2024_04_09/"/>
    <url>/2024/04/09/Post_2024_04_09/</url>
    
    <content type="html"><![CDATA[<p>自己想配博客的念头始于2022年10月在看到wk学长的博客后，那时他博客里详细的实验教程以及心路记载让我自己也有了“创建一个博客”的念头，因此在23年2月的时候，自己采用Githubpages也配置了一个hexo博客，然而，这个博客并没有使用多久，就因为我在电脑上用Ubuntu完全覆盖了windows，导致hexo的文件全部丢失而告终；之后，我在Gridea上也创建了一些博客，写了一些简单的玩意：</p><p><a href="https://litijiao.ongridea.com/">https://litijiao.ongridea.com/</a></p><p>但是，也因为各种原因，导致最后没有写太多，加上Gridea的一些内容不是很能定制化，所以自己还是选择了自建站博客。因此，在2024年2月，我创建了一个Halo的博客，Halo的好处是动态的，可以直接在浏览器上写（让我回想起了以前QQ空间的日志2333），而且Halo的配置简单，主题多样，因此我觉得Halo是个不错的选择。</p><p>然而，在3月，因为自己专注大创项目，导致忘记续费云主机，最后导致Halo博客被关闭。因此，在我重建Blog的时候，我也在思考，我需要一个怎样的博客？</p><ul><li><p>这个博客最好能免费，因为我不确定自己写博客的热情能坚持多少，如果是云主机最便宜的一个月也要30，这个也是蛮大的一笔开销。</p></li><li><p>这个博客最好配置不要太麻烦，主要是我对于前端的工作其实并不是很了解，而且一些网络的配置自己也不是很明白，自己最主要是想找个可以记录自己“质量不高”文字的地方（质量高的可能我更愿意发知乎等社交平台）。</p></li></ul><p>所以，最后我还是选择回hexo，借助githubpage和自己已经有的域名，可以免费做一个还可以的网站，这些教程也给了我重要的参考：</p><p><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p><p><a href="https://fluid-dev.github.io/hexo-fluid-docs/start/">https://fluid-dev.github.io/hexo-fluid-docs/start/</a></p><p><a href="https://blog.ayaka.space/2024/01/From-Halo-To-Hexo/">https://blog.ayaka.space/2024/01/From-Halo-To-Hexo/</a></p><p>总之，希望这次自己不要半途而废，能够在这里多记录一些所学所想。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/09/hello-world/"/>
    <url>/2024/04/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
